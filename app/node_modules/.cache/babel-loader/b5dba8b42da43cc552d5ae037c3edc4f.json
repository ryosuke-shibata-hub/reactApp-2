{"ast":null,"code":"var _jsxFileName = \"/Users/shibataryosuke/reactApp-2/app/src/App.js\";\n// import logo from './logo.svg';\n// import './App.css';\n// import React from 'react';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport { Component } from \"react\";\nimport './App.css';\nimport Rect from './Rect';\n// class App extends Component {\n//   constructor(props) {\n//     super()\n//     this.title = props.title\n//     this.message = props.message\n//   }\n//3-2\n//   render() {\n//     return <div>\n//       <h1 className=\"bg-primary text-white display-4\">React</h1>\n//       <div className=\"container\">\n//         <p className=\"subtitle\">draw rectingle.</p>\n//         <Rect x=\"200\" y=\"200\" w=\"200\" h=\"200\" c=\"#6ff9\" r=\"25\" />\n//         <Rect x=\"300\" y=\"300\" w=\"200\" h=\"200\" c=\"#f6f9\" r=\"75\" />\n//         <Rect x=\"400\" y=\"400\" w=\"200\" h=\"200\" c=\"#6669\" r=\"100\" />\n//       </div>\n//     </div>\n//   }\n//3-3\n\n//   constructor(props) {\n// super(props);\n// this.state = {\n//   msg: 'Hello Component.',\n//   count: 0,\n// }\n// let timer =setInterval(() => {\n//   this.setState({\n//     count: this.state.count + 1,\n//     msg: \"[count:\" + this.state.count + \"]\"\n//   })\n// }, 1000);\n//     this.state = {\n//       counter: 0,\n//       msg: 'count start!',\n//       flg:true,\n//     }\n//     this.doAction = this.doAction.bind(this)\n//   }\n\n//   doAction(e) {\n//     this.setState({\n//       counter: this.state.counter + 1,\n//       msg: this.state.counter,\n//       flg: !this.state.flg,\n//     })\n//   }\n\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <p className='subtitle'>Count number.</p>\n//         {/* <div className='alert alert-primary text-center'>\n//           <p className='alert alert-warning'>{this.state.msg}</p>\n//           <p className='alert alert-dark'>{this.props.msg}</p>\n//           <button className='btn btn-primary' onClick={this.doAction}>Click</button>\n//         </div> */}\n//         {this.state.flg ?\n//           <div className='alert alert-primary text-end'>\n//             <p className='h5'>Count:{this.state.msg}</p>\n//           </div>\n//           :\n//           <div className='alert alert-warning text-start'>\n//             <p className='h5'>{this.state.msg}です</p>\n//           </div>\n//         }\n//         <div className='text-center'>\n//           <button className='btn btn-primary' onClick={this.doAction}>Click</button>\n//         </div>\n//       </div>\n//     </div>\n//   }\n\n//     data = []\n\n//     area = {\n//       width: \"500px\",\n//       height: \"500px\",\n//       border:\"apx solid blue\"\n//     }\n\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       list:this.data\n//     }\n//     this.doAction = this.doAction.bind(this)\n//   }\n//   doAction(e) {\n//     let x = e.pageX\n//     let y = e.pageY\n//     this.data.push({ x: x, y: y })\n//     this.setState({\n//       list:this.data\n//     })\n//   }\n//   draw(d) {\n//     let s = {\n//       position: \"absolute\",\n//       left: (d.x - 25) + \"px\",\n//       top: (d.y - 25) + \"px\",\n//       width: \"50px\",\n//       height: \"50px\",\n//       backgroundColor:\"#66f3\",\n//     }\n//     return <div style={s}></div>\n//   }\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <p className='subtitle'>draw rectangle.</p>\n//         <div style={this.area} onClick={this.doAction}>\n//           {this.data.map((value) => this.draw(value))}\n//         </div>\n//       </div>\n//     </div>\n//   }\n//   data = [\n//     \"This is list sample.\",\n//     \"これはリストのサンプルです\",\n//     \"配列をリストに変換します\",\n//   ]\n\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       list: this.data\n//     }\n//   }\n\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <p className='subtitle'>Show List.</p>\n//         <List title=\"サンプル・リスト\" data={this.data} />\n//       </div>\n//     </div>\n//   }\n// }\n\n// class List extends Component {\n//   number = 1\n\n//   render() {\n//     let data = this.props.data;\n//     return <div>\n//       <p className='h5 text-center'>{this.props.title}</p>\n//       <ul className='list-group'>\n//         {data.map((item, key) =>\n//           <li className='list-group-item' key={key}>\n//             <Item number={key + 1} value={item} />\n//         </li>\n//         )}\n//       </ul>\n//     </div>\n//   }\n// }\n\n// class Item extends Component {\n//   item = {\n//     fontSize: \"16pt\",\n//     color: \"#00f\",\n//     textDecoration: \"underline\",\n//     textDecorationColor: \"#ddf\"\n//   }\n//   num = {\n//     fontWeight: \"bold\",\n//     color: \"red\"\n//   }\n\n//   render() {\n//     return (\n//       <p style={this.item}>\n//         <span style={this.num}>\n//           [{this.props.number}]&nbsp;\n//         </span>\n//         {this.props.value}\n//       </p>\n//     )\n//   }\n\n//3-4-25\n//   input = '';\n//   constructor(props) {\n//     super(props)\n//   }\n\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <Message title=\"Children!\">\n//           これはコンポーネント内のコンテンツです。\n//           マルでテキストを分割し、リストにして表示します。\n//           改行は必要ありますせん。\n//         </Message>\n//       </div>\n//     </div>\n//   }\n// }\n\n// class Message extends Component {\n//   li = {\n//     fontSize: \"14pt\",\n//     fontWeight: \"bold\",\n//     color: \"#090\"\n//   }\n\n//   render() {\n//     let content = this.props.children\n//     let arr = content.split('。')\n//     let arr2 = [];\n//     for (let i = 0; i < arr.length; i++) {\n//       if (arr[i].trim() != '') {\n//         arr2.push(arr[i]);\n//       }\n//     }\n//     let list = arr2.map((value, key) => (\n//       <li className='list-group-item' style={this.li} key={key}>\n//         {key + 1}. {value}.\n//       </li>\n//     ))\n\n//     return <div>\n//       <h2>{this.props.title}</h2>\n//       <ol className='list-group'>{list}</ol>\n//     </div>\n//   }\n//3-4-26\n//   input = '';\n\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       title: 'input from',\n//       message: 'type your name.'\n//     }\n//     this.doChange = this.doChange.bind(this)\n//     this.doSubmit = this.doSubmit.bind(this)\n//   }\n\n//   doChange(event) {\n//     this.input = event.target.value;\n//   }\n\n//   doSubmit(event) {\n//     this.setState({\n//       title: 'send form',\n//       message: 'Hello,' + this.input + '!!'\n//     })\n//     event.preventDefault()\n//   }\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <h4>{this.state.title}</h4>\n//         <p className='card h5 p-3'>{this.state.message}</p>\n//         <div className='alert alert-primary mt-3'>\n//           <form onSubmit={this.doSubmit}>\n//             <div className='form-group'>\n//               <label>Message.</label>\n//               <input type='text' className='form-control' onChange={this.doChange} required pattern='[A-Za-z _,.]+'/>\n//             </div>\n//             <input type='submit' className='btn btn-primary mt-3' value=\"Click\" />\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   }\n//3-4-29\n//   input = '';\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       title: 'input form',\n//       message: 'type your name',\n//       max: 10,\n//     }\n//     this.doCheck = this.doCheck.bind(this)\n//   }\n//   doCheck(event) {\n//     alert(event.target.value + \"は長すぎます。(最大\" + this.state.max + \"文字で指定してください。)\")\n//   }\n\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <h4>{this.state.title}</h4>\n//         <Message maxlength={this.state.max} onCheck={this.doCheck} />\n//       </div>\n//     </div>\n//   }\n// }\n\n// class Message extends Component {\n//   li = {\n//     fontSize: '14pt',\n//     fontWeight: 'bold',\n//     color: '#090',\n//   }\n\n//   constructor(props) {\n//     super(props)\n//     this.doChange = this.doChange.bind(this)\n//   }\n\n//   doChange(event) {\n//     if (event.target.value.length > this.props.maxlength) {\n//       this.props.onCheck(event)\n//       event.target.value =\n//       event.target.value.substr(0, this.props.maxlength)\n//     }\n//   }\n\n//   render() {\n//     return <div className='form-group'>\n//       <label>input:</label>\n//       <input type='text' className='form-control' onChange={this.doChange} />\n//     </div>\n//   }\n\n// }\n//3-4-30,31\n// let data = {\n//   title: 'React-Context',\n//   message: 'this is sample message'\n// }\n// const SampleContext = React.createContext(data)\n\n// class AppApp extends Component {\n//   newdata = {\n//     title: '新しいタイトル',\n//     message:'これは新しいメッサー時',\n//   }\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <Title />\n//         <Message />\n//         <hr />\n//         <SampleContext.Provider value={this.newdata}>\n//           <Title />\n//           <Message />\n//         </SampleContext.Provider>\n//         <hr />\n//         <Title />\n//         <Message />\n//       </div>\n//     </div>\n//   }\n// }\n\n// class Title extends Component {\n//   static contextType = SampleContext\n\n//   render() {\n//     return (<div className='card p-2 my-3'>\n//       <h2>{this.context.title}</h2>\n//     </div>\n//     )\n//   }\n// }\n\n// class Message extends Component {\n//   static contextType = SampleContext\n\n//   render() {\n//     return (\n//       <div className='alert alert-primary'>\n//         <p>{this.context.message}</p>\n//       </div>\n//     )\n//   }\n// }\n\n//3-4-32\n\n// let theme = {\n//   light: {\n//     style: {\n//       backgroundColor: '#f0f9ff',\n//       color: '#00f'\n//     },\n//     head: 'bg-primary text-white display-4 mb-4',\n//     alert: 'alert alert-primary my-3',\n//     text: 'text-primary m-3',\n//     foot: 'py-4',\n//   },\n//   dark: {\n//     style: {\n//       backgroundColor: '#336',\n//       color: '#eef',\n//     },\n//     head: 'bg-secoundary text-white display-4 mb-4',\n//     alert: 'a;ert alert-dark my-3',\n//     text: 'text-light m-3',\n//     foot: 'py-4',\n//   }\n// }\n\n// const ThemeContext = React.createContext(theme.light)\n\n// class light extends Component{\n//   static contextType = ThemeContext\n\n//   render() {\n//     return <div style={this.context.style}>\n//       <h1 className={this.context.head}>React</h1>\n//       <div className='container'>\n//         <Title value=\"Content Page\" />\n//         <Message value=\"※これはテーマのサンプルです。\" />\n//         <div className={this.context.foot}></div>\n//       </div>\n//     </div>\n//   }\n// }\n\n// class Title extends Component {\n//   static contextType = ThemeContext\n\n//   render() {\n//     return (\n//       <div className={this.context.alert}>\n//         <h2 style={this.context.style}>{this.props.value}</h2>\n//       </div>\n//     )\n//   }\n// }\n\n// class Message extends Component {\n//   static contextType = ThemeContext\n\n//   render() {\n//     return (\n//       <div style={this.context.style}>\n//         <p className={this.context.text}>{this.props.value}</p>\n//       </div>\n//     )\n//   }\n// }\n\n//4-1,4-2\n// function App() {\n// const [message] = useState(\"welcome to Hooks!\")\n\n// return (\n//   <div>\n//     <h1 className='bg-primary text-white display-4'>React</h1>\n//     <div className='container'>\n//       <h4 className='my-3'>Hooks sample</h4>\n//       <div className='alert alert-primary text-center'>\n//         <p className='h5'>{message}.</p>\n//       </div>\n//     </div>\n//   </div>\n// )\n//   const [count, setCount] = useState(0)\n//   const clickFunc = () => {\n//     setCount(count + 1)\n//   }\n\n//   return (\n//     <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <h4 className='my-3'>Hook Sample</h4>\n//         <div className='alert alert-primary text-center'>\n//           <p className='h5 mb3'>click: {count} times!</p>\n//           <div>\n//             <button className='btn btn-primary' onClick={clickFunc}>Click me</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\n//4-3\n// function App() {\n//   const [count, setCount] = useState(0)\n//   const [flg, setFlg] = useState(false)\n//   const clickFunc = () => {\n//     setCount(count + 1)\n//   }\n//   const changeFlag = (e) => {\n//     setFlg(e.target.checked)\n//   }\n\n//   return (\n//     <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <h4 className='my-3'>Hooks sample</h4>\n//         {flg ?\n//           <div className='alert alert-primary text-center'>\n//             <p className='h5 mb-3'>click: {count} times!</p>\n//             <div>\n//               <button className='btn btn-primary' onClick={clickFunc}>Click me</button>\n//             </div>\n//           </div>\n//           :\n//           <div className='card p-3 border-primary text-center'>\n//             <p className='h5 mb-3 text-left text-primary'>\n//               click: {count} times!\n//             </p>\n//             <div>\n//               <button className='btn btn-primary' onClick={clickFunc}>Click me</button>\n//             </div>\n//           </div>\n//         }\n//         <div className='form-group h6 text-center pt-3'>\n//           <input type='checkbox' className='form-check-input' id='check1' onChange={changeFlag} />\n//           <label className='form-check-label' htmlFor=\"check1\">Change form style</label>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\n//4-4,4-5\nfunction AlertMessage(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-primary h5 text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 10\n    }\n  }, props.message);\n}\nfunction CardMessage(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card p-3 h5 border-primary text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 10\n    }\n  }, props.message);\n}\nfunction App() {\n  cosnt[msg] = useState(\"This is sample message\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"bg-primary text-white display-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }\n  }, \"React\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 9\n    }\n  }, \"Hooks sample\"), /*#__PURE__*/React.createElement(AlertMessage, {\n    message: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardMessage, {\n    message: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 9\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useState","Component","Rect","AlertMessage","props","message","CardMessage","App","cosnt","msg"],"sources":["/Users/shibataryosuke/reactApp-2/app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n// import React from 'react';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport { Component } from \"react\"\nimport './App.css'\nimport Rect from './Rect'\n// class App extends Component {\n//   constructor(props) {\n//     super()\n//     this.title = props.title\n//     this.message = props.message\n//   }\n  //3-2\n//   render() {\n//     return <div>\n//       <h1 className=\"bg-primary text-white display-4\">React</h1>\n//       <div className=\"container\">\n//         <p className=\"subtitle\">draw rectingle.</p>\n//         <Rect x=\"200\" y=\"200\" w=\"200\" h=\"200\" c=\"#6ff9\" r=\"25\" />\n//         <Rect x=\"300\" y=\"300\" w=\"200\" h=\"200\" c=\"#f6f9\" r=\"75\" />\n//         <Rect x=\"400\" y=\"400\" w=\"200\" h=\"200\" c=\"#6669\" r=\"100\" />\n//       </div>\n//     </div>\n//   }\n  //3-3\n\n//   constructor(props) {\n    // super(props);\n    // this.state = {\n    //   msg: 'Hello Component.',\n    //   count: 0,\n    // }\n    // let timer =setInterval(() => {\n    //   this.setState({\n    //     count: this.state.count + 1,\n    //     msg: \"[count:\" + this.state.count + \"]\"\n    //   })\n    // }, 1000);\n//     this.state = {\n//       counter: 0,\n//       msg: 'count start!',\n//       flg:true,\n//     }\n//     this.doAction = this.doAction.bind(this)\n//   }\n\n//   doAction(e) {\n//     this.setState({\n//       counter: this.state.counter + 1,\n//       msg: this.state.counter,\n//       flg: !this.state.flg,\n//     })\n//   }\n\n\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <p className='subtitle'>Count number.</p>\n//         {/* <div className='alert alert-primary text-center'>\n//           <p className='alert alert-warning'>{this.state.msg}</p>\n//           <p className='alert alert-dark'>{this.props.msg}</p>\n//           <button className='btn btn-primary' onClick={this.doAction}>Click</button>\n//         </div> */}\n//         {this.state.flg ?\n//           <div className='alert alert-primary text-end'>\n//             <p className='h5'>Count:{this.state.msg}</p>\n//           </div>\n//           :\n//           <div className='alert alert-warning text-start'>\n//             <p className='h5'>{this.state.msg}です</p>\n//           </div>\n//         }\n//         <div className='text-center'>\n//           <button className='btn btn-primary' onClick={this.doAction}>Click</button>\n//         </div>\n//       </div>\n//     </div>\n//   }\n\n//     data = []\n\n//     area = {\n//       width: \"500px\",\n//       height: \"500px\",\n//       border:\"apx solid blue\"\n//     }\n\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       list:this.data\n//     }\n//     this.doAction = this.doAction.bind(this)\n//   }\n//   doAction(e) {\n//     let x = e.pageX\n//     let y = e.pageY\n//     this.data.push({ x: x, y: y })\n//     this.setState({\n//       list:this.data\n//     })\n//   }\n//   draw(d) {\n//     let s = {\n//       position: \"absolute\",\n//       left: (d.x - 25) + \"px\",\n//       top: (d.y - 25) + \"px\",\n//       width: \"50px\",\n//       height: \"50px\",\n//       backgroundColor:\"#66f3\",\n//     }\n//     return <div style={s}></div>\n//   }\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <p className='subtitle'>draw rectangle.</p>\n//         <div style={this.area} onClick={this.doAction}>\n//           {this.data.map((value) => this.draw(value))}\n//         </div>\n//       </div>\n//     </div>\n//   }\n//   data = [\n//     \"This is list sample.\",\n//     \"これはリストのサンプルです\",\n//     \"配列をリストに変換します\",\n//   ]\n\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       list: this.data\n//     }\n//   }\n\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <p className='subtitle'>Show List.</p>\n//         <List title=\"サンプル・リスト\" data={this.data} />\n//       </div>\n//     </div>\n//   }\n// }\n\n// class List extends Component {\n//   number = 1\n\n//   render() {\n//     let data = this.props.data;\n//     return <div>\n//       <p className='h5 text-center'>{this.props.title}</p>\n//       <ul className='list-group'>\n//         {data.map((item, key) =>\n//           <li className='list-group-item' key={key}>\n//             <Item number={key + 1} value={item} />\n//         </li>\n//         )}\n//       </ul>\n//     </div>\n//   }\n// }\n\n// class Item extends Component {\n//   item = {\n//     fontSize: \"16pt\",\n//     color: \"#00f\",\n//     textDecoration: \"underline\",\n//     textDecorationColor: \"#ddf\"\n//   }\n//   num = {\n//     fontWeight: \"bold\",\n//     color: \"red\"\n//   }\n\n//   render() {\n//     return (\n//       <p style={this.item}>\n//         <span style={this.num}>\n//           [{this.props.number}]&nbsp;\n//         </span>\n//         {this.props.value}\n//       </p>\n//     )\n//   }\n\n//3-4-25\n//   input = '';\n//   constructor(props) {\n//     super(props)\n//   }\n\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <Message title=\"Children!\">\n//           これはコンポーネント内のコンテンツです。\n//           マルでテキストを分割し、リストにして表示します。\n//           改行は必要ありますせん。\n//         </Message>\n//       </div>\n//     </div>\n//   }\n// }\n\n// class Message extends Component {\n//   li = {\n//     fontSize: \"14pt\",\n//     fontWeight: \"bold\",\n//     color: \"#090\"\n//   }\n\n//   render() {\n//     let content = this.props.children\n//     let arr = content.split('。')\n//     let arr2 = [];\n//     for (let i = 0; i < arr.length; i++) {\n//       if (arr[i].trim() != '') {\n//         arr2.push(arr[i]);\n//       }\n//     }\n//     let list = arr2.map((value, key) => (\n//       <li className='list-group-item' style={this.li} key={key}>\n//         {key + 1}. {value}.\n//       </li>\n//     ))\n\n//     return <div>\n//       <h2>{this.props.title}</h2>\n//       <ol className='list-group'>{list}</ol>\n//     </div>\n//   }\n  //3-4-26\n//   input = '';\n\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       title: 'input from',\n//       message: 'type your name.'\n//     }\n//     this.doChange = this.doChange.bind(this)\n//     this.doSubmit = this.doSubmit.bind(this)\n//   }\n\n//   doChange(event) {\n//     this.input = event.target.value;\n//   }\n\n//   doSubmit(event) {\n//     this.setState({\n//       title: 'send form',\n//       message: 'Hello,' + this.input + '!!'\n//     })\n//     event.preventDefault()\n//   }\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <h4>{this.state.title}</h4>\n//         <p className='card h5 p-3'>{this.state.message}</p>\n//         <div className='alert alert-primary mt-3'>\n//           <form onSubmit={this.doSubmit}>\n//             <div className='form-group'>\n//               <label>Message.</label>\n//               <input type='text' className='form-control' onChange={this.doChange} required pattern='[A-Za-z _,.]+'/>\n//             </div>\n//             <input type='submit' className='btn btn-primary mt-3' value=\"Click\" />\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   }\n  //3-4-29\n//   input = '';\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       title: 'input form',\n//       message: 'type your name',\n//       max: 10,\n//     }\n//     this.doCheck = this.doCheck.bind(this)\n//   }\n//   doCheck(event) {\n//     alert(event.target.value + \"は長すぎます。(最大\" + this.state.max + \"文字で指定してください。)\")\n//   }\n\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <h4>{this.state.title}</h4>\n//         <Message maxlength={this.state.max} onCheck={this.doCheck} />\n//       </div>\n//     </div>\n//   }\n// }\n\n// class Message extends Component {\n//   li = {\n//     fontSize: '14pt',\n//     fontWeight: 'bold',\n//     color: '#090',\n//   }\n\n//   constructor(props) {\n//     super(props)\n//     this.doChange = this.doChange.bind(this)\n//   }\n\n//   doChange(event) {\n//     if (event.target.value.length > this.props.maxlength) {\n//       this.props.onCheck(event)\n//       event.target.value =\n//       event.target.value.substr(0, this.props.maxlength)\n//     }\n//   }\n\n//   render() {\n//     return <div className='form-group'>\n//       <label>input:</label>\n//       <input type='text' className='form-control' onChange={this.doChange} />\n//     </div>\n//   }\n\n// }\n//3-4-30,31\n// let data = {\n//   title: 'React-Context',\n//   message: 'this is sample message'\n// }\n// const SampleContext = React.createContext(data)\n\n// class AppApp extends Component {\n//   newdata = {\n//     title: '新しいタイトル',\n//     message:'これは新しいメッサー時',\n//   }\n//   render() {\n//     return <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <Title />\n//         <Message />\n//         <hr />\n//         <SampleContext.Provider value={this.newdata}>\n//           <Title />\n//           <Message />\n//         </SampleContext.Provider>\n//         <hr />\n//         <Title />\n//         <Message />\n//       </div>\n//     </div>\n//   }\n// }\n\n// class Title extends Component {\n//   static contextType = SampleContext\n\n//   render() {\n//     return (<div className='card p-2 my-3'>\n//       <h2>{this.context.title}</h2>\n//     </div>\n//     )\n//   }\n// }\n\n// class Message extends Component {\n//   static contextType = SampleContext\n\n//   render() {\n//     return (\n//       <div className='alert alert-primary'>\n//         <p>{this.context.message}</p>\n//       </div>\n//     )\n//   }\n// }\n\n//3-4-32\n\n// let theme = {\n//   light: {\n//     style: {\n//       backgroundColor: '#f0f9ff',\n//       color: '#00f'\n//     },\n//     head: 'bg-primary text-white display-4 mb-4',\n//     alert: 'alert alert-primary my-3',\n//     text: 'text-primary m-3',\n//     foot: 'py-4',\n//   },\n//   dark: {\n//     style: {\n//       backgroundColor: '#336',\n//       color: '#eef',\n//     },\n//     head: 'bg-secoundary text-white display-4 mb-4',\n//     alert: 'a;ert alert-dark my-3',\n//     text: 'text-light m-3',\n//     foot: 'py-4',\n//   }\n// }\n\n// const ThemeContext = React.createContext(theme.light)\n\n// class light extends Component{\n//   static contextType = ThemeContext\n\n//   render() {\n//     return <div style={this.context.style}>\n//       <h1 className={this.context.head}>React</h1>\n//       <div className='container'>\n//         <Title value=\"Content Page\" />\n//         <Message value=\"※これはテーマのサンプルです。\" />\n//         <div className={this.context.foot}></div>\n//       </div>\n//     </div>\n//   }\n// }\n\n// class Title extends Component {\n//   static contextType = ThemeContext\n\n//   render() {\n//     return (\n//       <div className={this.context.alert}>\n//         <h2 style={this.context.style}>{this.props.value}</h2>\n//       </div>\n//     )\n//   }\n// }\n\n// class Message extends Component {\n//   static contextType = ThemeContext\n\n//   render() {\n//     return (\n//       <div style={this.context.style}>\n//         <p className={this.context.text}>{this.props.value}</p>\n//       </div>\n//     )\n//   }\n// }\n\n//4-1,4-2\n// function App() {\n  // const [message] = useState(\"welcome to Hooks!\")\n\n  // return (\n  //   <div>\n  //     <h1 className='bg-primary text-white display-4'>React</h1>\n  //     <div className='container'>\n  //       <h4 className='my-3'>Hooks sample</h4>\n  //       <div className='alert alert-primary text-center'>\n  //         <p className='h5'>{message}.</p>\n  //       </div>\n  //     </div>\n  //   </div>\n  // )\n//   const [count, setCount] = useState(0)\n//   const clickFunc = () => {\n//     setCount(count + 1)\n//   }\n\n//   return (\n//     <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <h4 className='my-3'>Hook Sample</h4>\n//         <div className='alert alert-primary text-center'>\n//           <p className='h5 mb3'>click: {count} times!</p>\n//           <div>\n//             <button className='btn btn-primary' onClick={clickFunc}>Click me</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\n//4-3\n// function App() {\n//   const [count, setCount] = useState(0)\n//   const [flg, setFlg] = useState(false)\n//   const clickFunc = () => {\n//     setCount(count + 1)\n//   }\n//   const changeFlag = (e) => {\n//     setFlg(e.target.checked)\n//   }\n\n//   return (\n//     <div>\n//       <h1 className='bg-primary text-white display-4'>React</h1>\n//       <div className='container'>\n//         <h4 className='my-3'>Hooks sample</h4>\n//         {flg ?\n//           <div className='alert alert-primary text-center'>\n//             <p className='h5 mb-3'>click: {count} times!</p>\n//             <div>\n//               <button className='btn btn-primary' onClick={clickFunc}>Click me</button>\n//             </div>\n//           </div>\n//           :\n//           <div className='card p-3 border-primary text-center'>\n//             <p className='h5 mb-3 text-left text-primary'>\n//               click: {count} times!\n//             </p>\n//             <div>\n//               <button className='btn btn-primary' onClick={clickFunc}>Click me</button>\n//             </div>\n//           </div>\n//         }\n//         <div className='form-group h6 text-center pt-3'>\n//           <input type='checkbox' className='form-check-input' id='check1' onChange={changeFlag} />\n//           <label className='form-check-label' htmlFor=\"check1\">Change form style</label>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\n//4-4,4-5\nfunction AlertMessage(props) {\n  return <div className='alert alert-primary h5 text-primary'>\n    {props.message}\n  </div>\n}\n\nfunction CardMessage(props) {\n  return <div className='card p-3 h5 border-primary text-center'>\n    {props.message}\n  </div>\n}\n\nfunction App() {\n  cosnt [msg] = useState(\"This is sample message\")\n  return (\n    <div>\n      <h1 className='bg-primary text-white display-4'>React</h1>\n      <div className='container'>\n        <h4 className='my-3'>Hooks sample</h4>\n        <AlertMessage message={msg} />\n        <CardMessage message={msg} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAEF;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASC,YAAY,CAACC,KAAK,EAAE;EAC3B,oBAAO;IAAK,SAAS,EAAC,qCAAqC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxDA,KAAK,CAACC,OAAO,CACV;AACR;AAEA,SAASC,WAAW,CAACF,KAAK,EAAE;EAC1B,oBAAO;IAAK,SAAS,EAAC,wCAAwC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3DA,KAAK,CAACC,OAAO,CACV;AACR;AAEA,SAASE,GAAG,GAAG;EACbC,KAAK,CAAEC,GAAG,CAAC,GAAGT,QAAQ,CAAC,wBAAwB,CAAC;EAChD,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,SAAS,EAAC,iCAAiC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAW,eAC1D;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxB;IAAI,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAkB,eACtC,oBAAC,YAAY;IAAC,OAAO,EAAES,GAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAC9B,oBAAC,WAAW;IAAC,OAAO,EAAEA,GAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACzB,CACF;AAEV;AAEA,eAAeF,GAAG"},"metadata":{},"sourceType":"module"}